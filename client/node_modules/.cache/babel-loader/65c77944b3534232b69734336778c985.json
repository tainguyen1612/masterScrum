{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macbook/Documents/WebEnterPrise/client/src/components/screens/SubmitReport.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./RegisterScreen.css\"; // import { handleUpload } from'../constant/uploadWord';\n\nimport { storage } from \"../config/firebase\";\nimport alert from '../constant/alert';\nimport moment from 'moment';\n\nconst SubmitReport = ({\n  match\n}) => {\n  _s();\n\n  const [pdf, setPdf] = useState(null);\n  const [time, setTime] = useState();\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setPdf(e.target.files[0]);\n    }\n  };\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      token: localStorage.getItem(\"authToken\")\n    }\n  };\n\n  const handleUpload = pdf => {\n    const uploadTask = storage.ref(`pdfs/${pdf.name}`).put(pdf);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n    }, error => {\n      alert(\"can not upload pdf\", \"error\");\n      console.log(error);\n    }, () => {\n      storage.ref(\"pdfs\").child(pdf.name).getDownloadURL().then(async url => {\n        const {\n          data\n        } = await axios.post(`/homeStudent/lstFaculty/report/upload/${match.params.facultyID}`, {\n          reportUrl: url\n        }, config);\n\n        if (data.success === true) {\n          alert(data.message, \"success\");\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    const end = moment(match.endtime);\n    const cur = moment();\n    console.log(end, 222);\n    console.log(end.diff(cur, 'days'));\n    setTime(end.diff(cur, 'days'));\n  }, []); //   const [reportdata, setReportData] = useState({\n  //     File: \"\",\n  //     coordinator: \"\",\n  //     startDay: \"\",\n  //     endDay: \"\",\n  //   })\n  //   const [coordinator, setCoordinator] = useState([])\n  //   const [error, setError] = useState(\"\");\n  // const display = coordinator.map(item => \n  //     <option key={item._id} value={item._id}> {item.name} </option>\n  // )\n  // async function submit(e) {\n  //     e.preventDefault();\n  //     const config = {\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //         token: localStorage.getItem(\"authToken\"),\n  //       },\n  //     };\n  //     try {\n  //         // const { data } = await axios.post(\"/homeAdmin/addFaculty\",config,{...facultydata});\n  //       //localStorage.setItem(\"authToken\", data.token);\n  //       // console.log(data);\n  //     } catch (error) {\n  //       console.log(\"khong nhap duoc\");\n  //       setError(\"\");\n  //       setTimeout(() => {\n  //         setError(\"\");\n  //       }, 5000);\n  //     }\n  // };\n  // function handle(e){\n  //   const newData = {...facultydata}\n  //   newData[e.target.id]=e.target.value\n  //   setFacultydata(newData)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => handleUpload(pdf),\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this) //   <div className=\"register-screen\">\n  //     <form onSubmit={(e)=>submit(e)} className=\"register-screen__form\">\n  //       <h3 className=\"register-screen__title\">Add Faculty</h3>\n  //       {error && <span className=\"error-message\">{error}</span>}\n  //       <div className=\"form-group\">\n  //         <label htmlFor=\"name\">Faculty Name:</label>\n  //         <input\n  //           type=\"text\"\n  //           name=\"facultyName\"\n  //           required\n  //           id=\"facultyName\"\n  //           placeholder=\"Enter faculty\"\n  //           value={facultydata.facultyName}\n  //           onChange={(e)=>handle(e)}\n  //         />\n  //       </div>\n  //       <div className=\"form-group\">\n  //         <label htmlFor=\"email\">Coordinator:</label>\n  //         <select name=\"coordinator\" id=\"coordinator\" name=\"coordinator\" value={facultydata.coordinator} onChange={(e)=>handle(e)}>\n  // \t\t\t\t\t<option value=\"\">Choose a coordinator</option>  \n  //                       {display}\n  // \t\t    </select>\n  //       </div>\n  //       <div className=\"form-group\">\n  //         <label htmlFor=\"email\">Start Day:</label>\n  //         <input\n  //           type=\"date\"\n  //           name=\"startDay\"\n  //           required\n  //           id=\"startDay\"\n  //           placeholder=\"startDay\"\n  //           value={facultydata.startDay}\n  //           onChange={(e)=>handle(e)}\n  //         />\n  //       </div>\n  //       <div className=\"form-group\">\n  //         <label>End Day:</label>\n  //         <input\n  //           type=\"date\"\n  //           name=\"endDay\"\n  //           required\n  //           id=\"endDay\"\n  //           placeholder=\"Enter end day\"\n  //           value={facultydata.endDay}\n  //           onChange={(e)=>handle(e)}\n  //         />\n  //       </div>\n  //       <button type=\"submit\" className=\"btn btn-primary\">\n  //         Add Faculty\n  //       </button>\n  //     </form>\n  //   </div>\n  // );\n  ;\n};\n\n_s(SubmitReport, \"iP8wUpBpRmpsFyZ8vGRGKj39aDY=\");\n\n_c = SubmitReport;\nexport default SubmitReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubmitReport\");","map":{"version":3,"sources":["/Users/macbook/Documents/WebEnterPrise/client/src/components/screens/SubmitReport.js"],"names":["useState","useEffect","axios","storage","alert","moment","SubmitReport","match","pdf","setPdf","time","setTime","handleChange","e","target","files","config","headers","token","localStorage","getItem","handleUpload","uploadTask","ref","name","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","url","data","post","params","facultyID","reportUrl","success","message","end","endtime","cur","diff"],"mappings":"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","sourcesContent":["import { useState , useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./RegisterScreen.css\";\n// import { handleUpload } from'../constant/uploadWord';\nimport { storage } from \"../config/firebase\";\nimport alert from '../constant/alert';\nimport moment from 'moment';\nconst SubmitReport = ({match}) => {\n  const [pdf, setPdf] = useState(null);\n  const [time, setTime] = useState();\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setPdf(e.target.files[0]);\n    }\n  };\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      token : localStorage.getItem(\"authToken\")\n    },\n  };\n  const handleUpload = (pdf) => {\n    const uploadTask = storage.ref(`pdfs/${pdf.name}`).put(pdf);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n      },\n      (error) => {\n        alert(\"can not upload pdf\", \"error\");\n        console.log(error);\n      },\n      () => {\n         storage\n          .ref(\"pdfs\")\n          .child(pdf.name)\n          .getDownloadURL()\n          .then(async (url) => {\n            const {data} = await axios.post(\n              `/homeStudent/lstFaculty/report/upload/${match.params.facultyID}`,\n              { reportUrl:  url},\n              config\n            );\n            if(data.success === true) {\n            alert(data.message, \"success\");\n            }\n          });\n      }\n    );\n  };\n\n  useEffect(()=> {\n    const  end = moment(match.endtime);\n    const cur = moment();\n    console.log(end,222);\n    console.log(end.diff(cur, 'days'));\n\n    setTime(end.diff(cur, 'days'))\n  },[])\n//   const [reportdata, setReportData] = useState({\n//     File: \"\",\n//     coordinator: \"\",\n//     startDay: \"\",\n//     endDay: \"\",\n//   })\n//   const [coordinator, setCoordinator] = useState([])\n//   const [error, setError] = useState(\"\");\n\n// const display = coordinator.map(item => \n//     <option key={item._id} value={item._id}> {item.name} </option>\n// )\n\n// async function submit(e) {\n//     e.preventDefault();\n\n//     const config = {\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         token: localStorage.getItem(\"authToken\"),\n//       },\n//     };\n\n//     try {\n//         // const { data } = await axios.post(\"/homeAdmin/addFaculty\",config,{...facultydata});\n//       //localStorage.setItem(\"authToken\", data.token);\n    \n//       // console.log(data);\n//     } catch (error) {\n//       console.log(\"khong nhap duoc\");\n//       setError(\"\");\n//       setTimeout(() => {\n//         setError(\"\");\n//       }, 5000);\n//     }\n    \n// };\n\n  // function handle(e){\n  //   const newData = {...facultydata}\n  //   newData[e.target.id]=e.target.value\n  //   setFacultydata(newData)\n  // }\n\n\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleChange} />\n      <p>{time}</p>\n      <button onClick={e => handleUpload(pdf)}>Upload</button>\n    </div>\n  //   <div className=\"register-screen\">\n  //     <form onSubmit={(e)=>submit(e)} className=\"register-screen__form\">\n  //       <h3 className=\"register-screen__title\">Add Faculty</h3>\n  //       {error && <span className=\"error-message\">{error}</span>}\n  //       <div className=\"form-group\">\n  //         <label htmlFor=\"name\">Faculty Name:</label>\n  //         <input\n  //           type=\"text\"\n  //           name=\"facultyName\"\n  //           required\n  //           id=\"facultyName\"\n  //           placeholder=\"Enter faculty\"\n  //           value={facultydata.facultyName}\n  //           onChange={(e)=>handle(e)}\n  //         />\n  //       </div>\n  //       <div className=\"form-group\">\n  //         <label htmlFor=\"email\">Coordinator:</label>\n\n  //         <select name=\"coordinator\" id=\"coordinator\" name=\"coordinator\" value={facultydata.coordinator} onChange={(e)=>handle(e)}>\n\t// \t\t\t\t\t<option value=\"\">Choose a coordinator</option>  \n  //                       {display}\n\t// \t\t    </select>\n  //       </div>\n  //       <div className=\"form-group\">\n  //         <label htmlFor=\"email\">Start Day:</label>\n  //         <input\n  //           type=\"date\"\n  //           name=\"startDay\"\n  //           required\n  //           id=\"startDay\"\n  //           placeholder=\"startDay\"\n  //           value={facultydata.startDay}\n  //           onChange={(e)=>handle(e)}\n  //         />\n  //       </div>\n  //       <div className=\"form-group\">\n  //         <label>End Day:</label>\n  //         <input\n  //           type=\"date\"\n  //           name=\"endDay\"\n  //           required\n  //           id=\"endDay\"\n  //           placeholder=\"Enter end day\"\n  //           value={facultydata.endDay}\n  //           onChange={(e)=>handle(e)}\n  //         />\n  //       </div>\n\n  //       <button type=\"submit\" className=\"btn btn-primary\">\n  //         Add Faculty\n  //       </button>\n  //     </form>\n  //   </div>\n  // );\n)};\n\n\nexport default SubmitReport;"]},"metadata":{},"sourceType":"module"}